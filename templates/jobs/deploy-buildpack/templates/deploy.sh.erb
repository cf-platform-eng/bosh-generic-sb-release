#!/bin/bash
set -e -x

  <%
    def grab_app_domain_name
      app_domains_str = properties.app_domains.to_s
      array_start = ( app_domains_str =~ /^\[/ )
      if (array_start == 0)
        app_domain_entry = app_domains_str.gsub(/^\[/, '').gsub(/\]/,'').gsub(/,.*/, '')
      else
        app_domain_entry = app_domains_str
      end
      app_domain_entry
    end
    app_domain = grab_app_domain_name
  %>

export PATH="/var/vcap/packages/cf_cli/bin:$PATH"

export SCHEME=https
export ADMIN_USER=<%= properties.cf.admin_user %>
export ADMIN_PASSWORD=<%= properties.cf.admin_password %>
export DOMAIN=<%= properties.domain %>
export API_ENDPOINT=$SCHEME://api.${DOMAIN}
export BUILDPACK_NAME=<%= properties.generic_buildpack.name %>
export BUILDPACK_ORDER=<%= properties.generic_buildpack.order %>

export CF_HOME=`pwd`/home/cf
mkdir -p $CF_HOME

# Following variables would be replaced based on blobs that get added and are considered as app bits
TARGET_BUILDPACK=TEMPLATE_APP_FILE
JOB_NAME=deploy-generic-buildpack
PACKAGE_NAME_SUFFIX=generic_buildpack
PACKAGE_PATH=`echo /var/vcap/packages/*${PACKAGE_NAME_SUFFIX}*`

RUN_DIR=/var/vcap/sys/run/$JOB_NAME
LOG_DIR=/var/vcap/sys/log/$JOB_NAME
PIDFILE=${RUN_DIR}/pid

export DEBUG_LOG=$LOG_DIR/deploy-service-broker.log

mkdir -p $RUN_DIR $LOG_DIR
chown -R vcap:vcap $RUN_DIR $LOG_DIR

function log_debug() {
  echo `date` $1 >> $DEBUG_LOG
}

function authenticate_and_target() {
  cf api $API_ENDPOINT <% if properties.ssl.skip_cert_verify %>--skip-ssl-validation<% end %>
  cf auth $ADMIN_USER $ADMIN_PASSWORD
}

# Use this only to bind any additional files/libraries or modify app contents
function modify_buildpack() {
  cp ${PACKAGE_PATH}/lib/${TARGET_BUILDPACK}  ${PACKAGE_PATH}/${TARGET_BUILDPACK}
}

function push_buildpack() {
  pushd $PACKAGE_PATH
    mkdir -p /var/vcap/data/tmp
    export TMPDIR=/var/vcap/data/tmp

    BUILDPACK_EXISTS=`cf buildpacks | grep ${BUILDPACK_NAME} >/dev/null; echo $?`
    if [ "$BUILDPACK_EXISTS" == "0" ]; then
      if [ "$BUILDPACK_ORDER" -gt 5 ]; then
        # Let it go to the last position
        CF_TRACE=true cf create-buildpack ${BUILDPACK_NAME} ${PACKAGE_PATH}/${TARGET_BUILDPACK} --enable
      else
        CF_TRACE=true cf create-buildpack ${BUILDPACK_NAME} ${PACKAGE_PATH}/${TARGET_BUILDPACK} $BUILDPACK_ORDER --enable
      fi
    else
      if [ "$BUILDPACK_ORDER" -gt 5 ]; then
        # Leave it at the same position
        CF_TRACE=true cf update-buildpack ${BUILDPACK_NAME} -p ${PACKAGE_PATH}/${TARGET_BUILDPACK} --enable
      else
        CF_TRACE=true cf update-buildpack ${BUILDPACK_NAME} -p ${PACKAGE_PATH}/${TARGET_BUILDPACK} -i $BUILDPACK_ORDER --enable
      fi
    fi
  popd
}


cf -v
authenticate_and_target
modify_buildpack
push_buildpack
