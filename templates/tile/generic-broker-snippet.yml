---
property_blueprints:
- name: encryption_key
  type: secret
- name: vm_credentials
  type: salted_credentials
  default:
    identity: vcap
- name: app_name
  type: string
  configurable: true
  default: generic-broker
- name: app_uri
  type: string
  configurable: false
  default: APP_URI
- name: external_uri
  type: string
  configurable: false
  default: EXTERNAL_URI
- name: enable_global_access_to_plans
  type: boolean
  configurable: true
  default: false
- name: internal_service_names
  type: string
  configurable: false
  default: "INTERNAL_SERVICE_NAME"

### ON_DEMAND_PLAN_BEGIN_MARKER
- name: on_demand_service_plans_collection
  type: collection
  configurable: true

  # Needs to have its own inner/nested property_blueprints when its a collection
  property_blueprints:
  - name: guid
    type: uuid
    optional: false
    unique: true
  - name: plan_name
    type: string
    configurable: true
  - name: plan_description
    type: string
    configurable: true
  - name: plan_details
    type: text
    configurable: true

### ON_DEMAND_PLAN_END_MARKER

form_types:                                                # [8]
- property_inputs:                                       # [9]
  - reference: .properties.app_name
    label: Service Broker Application Name
    description: 'Enter the name for the Service Broker App'
  ### INTERNAL_APP_URI_LABEL_BEGIN_MARKER
  - reference: .properties.app_uri
    label: Service Broker Application URI
    description: 'Enter the uri/endpoint for the Service Broker app'
  ### INTERNAL_APP_URI_LABEL_END_MARKER
  ### EXTERNAL_URI_LABEL_BEGIN_MARKER
  - reference: .properties.external_uri
    label: Service Broker Application URI
    description: 'Enter the uri/endpoint for the Service Broker app'
  ### EXTERNAL_URI_LABEL_END_MARKER
  - reference: .properties.enable_global_access_to_plans
    label: Enable Global access to all Services and Plans
    description: 'Open up access to all service plans across all orgs and spaces'
  ### CUSTOM_VARIABLE_LABEL_BEGIN_MARKER
  ### CUSTOM_VARIABLE_LABEL_END_MARKER
  name: generic_broker
  label: Service Broker Application
  description: Service Broker configuration

  ### ON_DEMAND_PLAN_BEGIN_MARKER
- property_inputs:
  - reference: .properties.on_demand_service_plans_collection
    label: On-Demand Service Plans
    property_inputs:
    - reference: plan_name
      label: Plan Name
      description: "Name of Plan"
      slug: false
    - reference: plan_description
      label: Plan Description
      description: "Description of Plan"
      slug: false
    - reference: plan_details
      label: "Plan Details or bullets (individual line entries, each with Name : Value : Description and ending with ;)"
      description: "Specify configurations or bullets for the plan. Specify each plan detail or bullet in a separate line with a name, value, description separated by ':' and ending with ';'.
      Detail1: associated value : description ; <NEWLINE> Detail2: its value : description <NEWLINE>"
      slug: false
  name: on_demand_service_plans
  label: On-Demand Service Plans
  description: "An on-demand service plan lets Pivotal CF users create their own Service Plans from the Pivotal CF command line interface or developer console. Use this page to configure the service plan's settings."
  ### ON_DEMAND_PLAN_END_MARKER

job_types:

- name: register-broker
  resource_label: Register Generic Service Broker
  templates:
  - name: register-broker
    release: generic_release
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 512
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2048
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  instance_definitions:
  - name: instances
    type: integer
    configurable: false
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap
  - name: broker_credentials
    type: salted_credentials

  manifest: |
    domain: (( ..cf.cloud_controller.system_domain.value ))
    app_domains:
      - (( ..cf.cloud_controller.apps_domain.value ))
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    uaa:
      url: https://uaa.(( ..cf.cloud_controller.system_domain.value ))
      clients:
        generic_broker:
          secret: test
    generic_broker:
      app_name: (( .properties.app_name.value ))
  ### INTERNAL_APP_URI_BEGIN_MARKER
      app_uri: (( .properties.app_uri.value ))
  ### INTERNAL_APP_URI_END_MARKER
      enable_global_access_to_plans: (( .properties.enable_global_access_to_plans.value ))
      cf:
        admin_user: (( ..cf.uaa.system_services_credentials.identity ))
        admin_password: (( ..cf.uaa.system_services_credentials.password ))
      broker:
        user: (( .deploy-service-broker.broker_credentials.identity ))
        password: (( .deploy-service-broker.broker_credentials.password ))
        internal_service_names: (( .properties.internal_service_names.value ))
  ### EXTERNAL_URI_BEGIN_MARKER
        uri: (( .properties.external_uri.value ))
  ### EXTERNAL_URI_END_MARKER

- name: destroy-broker
  resource_label: Remove Generic Service Broker
  templates:
  - name: destroy-broker
    release: generic_release
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 512
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 1024
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  instance_definitions:
  - name: instances
    type: integer
    configurable: false
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap

  manifest: |
    domain: (( ..cf.cloud_controller.system_domain.value ))
    app_domains:
      - (( ..cf.cloud_controller.apps_domain.value ))
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    uaa:
      url: https://uaa.(( ..cf.cloud_controller.system_domain.value ))
      clients:
        generic_broker:
          secret: test
    generic_broker:
      app_name: (( .properties.app_name.value ))
      app_uri: (( .properties.app_uri.value ))
      cf:
        admin_user: (( ..cf.uaa.system_services_credentials.identity ))
        admin_password: (( ..cf.uaa.system_services_credentials.password ))
      broker:
        user: (( .deploy-service-broker.broker_credentials.identity ))
        password: (( .deploy-service-broker.broker_credentials.password ))
        internal_service_names: (( .properties.internal_service_names.value ))

post_deploy_errands:
- name: register-broker
pre_delete_errands:
- name: destroy-broker

